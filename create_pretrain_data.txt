# Install docker
sudo apt-get -y install ca-certificates curl gnupg lsb-release
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io

# Install nvidia-docker2
distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
   && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \
   && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update
sudo apt-get install -y nvidia-docker2
sudo systemctl restart docker



python3 create_pretraining_data.py \
   --input_file=../processed_dataset/results4/part-00001-of-00500 \
   --output_file=../tf_record/part-00001-of-00500 \
   --vocab_file=../input_files/vocab.txt \
   --do_lower_case=True \
   --max_seq_length=512 \
   --max_predictions_per_seq=76 \
   --masked_lm_prob=0.15 \
   --random_seed=12345 \
   --dupe_factor=10

python3 create_pretraining_data.py \
  --input_file=../processed_dataset/results4/eval.txt \
  --output_file=../evaluation/tmp \
  --vocab_file=../input_files/vocab.txt \
  --do_lower_case=True \
  --max_seq_length=512 \
  --max_predictions_per_seq=76 \
  --masked_lm_prob=0.15 \
  --random_seed=12345 \
  --dupe_factor=10


python3 pick_eval_samples.py \
  --input_tfrecord=../evaluation/tmp \
  --output_tfrecord=../evaluation/eva_record \
  --num_examples_to_pick=10000


TF_XLA_FLAGS='--tf_xla_auto_jit=2' \
python3 run_pretraining.py \
  --bert_config_file=./input_files/bert_config.json \
  --output_dir=/tmp/output/ \
  --input_file=./tf_record/part-00001-of-00500 \
  --do_train=True \
  --iterations_per_loop=1000 \
  --learning_rate=0.0001 \
  --max_eval_steps=1250 \
  --max_predictions_per_seq=76 \
  --max_seq_length=512 \
  --num_gpus=1 \
  --num_train_steps=8086 \
  --num_warmup_steps=1562 \
  --optimizer=lamb \
  --save_checkpoints_steps=156200000 \
  --start_warmup_step=0 \
  --train_batch_size=8 \
  --nouse_tpu


docker run --gpus all -it --rm -v /home/cc/training/language_model/tensorflow/bert/:/workspace tensorflow/tensorflow:1.15.2-gpu bash

docker run --gpus all -it --rm -v /home/cc/training/language_model/tensorflow/bert/:/workspace tensorflow/tensorflow:2.4.0-gpu bash

docker run --gpus all -it --rm -v /home/cc/training/language_model/tensorflow/bert/:/workspace bert bash

cd logging
pip install -e .

